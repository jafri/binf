filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %notin% c(0, 9, 15) |
FxSite_11_1 %notin% c(0, 9, 15) |
FxSite_12_1 %notin% c(0, 9, 15) |
FxSite_13_1 %notin% c(0, 9, 15) |
FxSite_14_1 %notin% c(0, 9, 15) |
FxSite_15_1 %notin% c(0, 9, 15) |
FxSite_15_2 %notin% c(0, 9, 15) |
FxSite_16_1 %notin% c(0, 9, 15) |
FxSite_16_2 %notin% c(0, 9, 15))
lowTraumaFractures <- fractureData$record_id
# Full camos data set
camos <- read.csv("camos_adjustedZscore.csv") %>% select(-sex)
camos$radius_ZScore <- as.numeric(levels(camos$radius_ZScore))[camos$radius_ZScore]
camos$tibia_ZScore <- as.numeric(levels(camos$tibia_ZScore))[camos$tibia_ZScore]
combinedDf <- inner_join(fractureData, camos, by="record_id")
filteredCombinedDf <- combinedDf %>% filter(record_id %in% lowTraumaFractures)
#filteredCombinedDf
# Filter by age
# filteredCombinedDf <- filteredCombinedDf %>% filter(age >= 60)
# nrow(filteredCombinedDf)
# Sex specific dfs
femaleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Female')
maleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Male')
# Group by
fn_radius_female <- femaleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_radius_male <- maleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_tibia_female <- femaleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
fn_tibia_male <- maleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
radius_fn_male_fracture <- radius_fn_male_plot %+% subset(fn_radius_male) + ggtitle("Male: Radius FL vs FN T-Score (n=6)")
radius_fn_female_fracture <- radius_fn_female_plot %+% subset(fn_radius_female) + ggtitle("Female: Radius FL vs FN T-Score (n=29)")
ggarrange(radius_fn_female_fracture, radius_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
radius_fn_male_fracture <- radius_fn_male_plot %+% subset(fn_radius_male) + ggtitle("Male: Radius FL vs FN T-Score (n=6)")
radius_fn_female_fracture <- radius_fn_female_plot %+% subset(fn_radius_female) + ggtitle("Female: Radius FL vs FN T-Score (n=29)")
ggarrange(radius_fn_female_fracture, radius_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
## Import fracture dataset
# Not in function
`%notin%` <- function (x, vector) is.na(match(x, vector, nomatch=NA_integer_))
# Remove unncessary column and replace 0s with NAs
fractureData <- read.csv("fractureData.csv")
fractureData[is.na(fractureData)] <- 0
fractureData$sex[fractureData$sex == 0] = 'Female'
fractureData$sex[fractureData$sex == 1] = 'Male'
names(fractureData)[names(fractureData) == 'ID'] <- 'record_id'
fractureData <- fractureData %>%
filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %notin% c(0, 9, 15) |
FxSite_11_1 %notin% c(0, 9, 15) |
FxSite_12_1 %notin% c(0, 9, 15) |
FxSite_13_1 %notin% c(0, 9, 15) |
FxSite_14_1 %notin% c(0, 9, 15) |
FxSite_15_1 %notin% c(0, 9, 15) |
FxSite_15_2 %notin% c(0, 9, 15) |
FxSite_16_1 %notin% c(0, 9, 15) |
FxSite_16_2 %notin% c(0, 9, 15))
lowTraumaFractures <- fractureData$record_id
# Full camos data set
camos <- read.csv("camos_adjustedZscore.csv") %>% select(-sex)
camos$radius_ZScore <- as.numeric(levels(camos$radius_ZScore))[camos$radius_ZScore]
camos$tibia_ZScore <- as.numeric(levels(camos$tibia_ZScore))[camos$tibia_ZScore]
combinedDf <- inner_join(fractureData, camos, by="record_id")
filteredCombinedDf <- combinedDf %>% filter(record_id %in% lowTraumaFractures)
#filteredCombinedDf
# Filter by age
filteredCombinedDf <- filteredCombinedDf %>% filter(age >= 60)
# nrow(filteredCombinedDf)
# Sex specific dfs
femaleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Female')
maleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Male')
# Group by
fn_radius_female <- femaleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_radius_male <- maleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_tibia_female <- femaleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
fn_tibia_male <- maleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
radius_fn_male_fracture <- radius_fn_male_plot %+% subset(fn_radius_male) + ggtitle("Male: Radius FL vs FN T-Score (n=6)")
radius_fn_female_fracture <- radius_fn_female_plot %+% subset(fn_radius_female) + ggtitle("Female: Radius FL vs FN T-Score (n=29)")
ggarrange(radius_fn_female_fracture, radius_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
## Import fracture dataset
# Not in function
`%notin%` <- function (x, vector) is.na(match(x, vector, nomatch=NA_integer_))
# Remove unncessary column and replace 0s with NAs
fractureData <- read.csv("fractureData.csv")
fractureData[is.na(fractureData)] <- 0
fractureData$sex[fractureData$sex == 0] = 'Female'
fractureData$sex[fractureData$sex == 1] = 'Male'
names(fractureData)[names(fractureData) == 'ID'] <- 'record_id'
fractureData <- fractureData %>%
filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %notin% c(0, 9, 15) |
FxSite_11_1 %notin% c(0, 9, 15) |
FxSite_12_1 %notin% c(0, 9, 15) |
FxSite_13_1 %notin% c(0, 9, 15) |
FxSite_14_1 %notin% c(0, 9, 15) |
FxSite_15_1 %notin% c(0, 9, 15) |
FxSite_15_2 %notin% c(0, 9, 15) |
FxSite_16_1 %notin% c(0, 9, 15) |
FxSite_16_2 %notin% c(0, 9, 15))
lowTraumaFractures <- fractureData$record_id
# Full camos data set
camos <- read.csv("camos_adjustedZscore.csv") %>% select(-sex)
camos$radius_ZScore <- as.numeric(levels(camos$radius_ZScore))[camos$radius_ZScore]
camos$tibia_ZScore <- as.numeric(levels(camos$tibia_ZScore))[camos$tibia_ZScore]
combinedDf <- inner_join(fractureData, camos, by="record_id")
filteredCombinedDf <- combinedDf %>% filter(record_id %in% lowTraumaFractures)
#filteredCombinedDf
# Filter by age
# filteredCombinedDf <- filteredCombinedDf %>% filter(age >= 60)
# nrow(filteredCombinedDf)
# Sex specific dfs
femaleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Female')
maleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Male')
# Group by
fn_radius_female <- femaleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_radius_male <- maleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_tibia_female <- femaleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
fn_tibia_male <- maleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
radius_fn_male_fracture <- radius_fn_male_plot %+% subset(fn_radius_male) + ggtitle("Male: Radius FL vs FN T-Score (n=6)")
radius_fn_female_fracture <- radius_fn_female_plot %+% subset(fn_radius_female) + ggtitle("Female: Radius FL vs FN T-Score (n=29)")
ggarrange(radius_fn_female_fracture, radius_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
## Import fracture dataset
# Not in function
`%notin%` <- function (x, vector) is.na(match(x, vector, nomatch=NA_integer_))
# Remove unncessary column and replace 0s with NAs
fractureData <- read.csv("fractureData.csv")
fractureData[is.na(fractureData)] <- 0
fractureData$sex[fractureData$sex == 0] = 'Female'
fractureData$sex[fractureData$sex == 1] = 'Male'
names(fractureData)[names(fractureData) == 'ID'] <- 'record_id'
fractureData <- fractureData %>%
filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %notin% c(0, 9, 15) |
FxSite_11_1 %notin% c(0, 9, 15) |
FxSite_12_1 %notin% c(0, 9, 15) |
FxSite_13_1 %notin% c(0, 9, 15) |
FxSite_14_1 %notin% c(0, 9, 15) |
FxSite_15_1 %notin% c(0, 9, 15) |
FxSite_15_2 %notin% c(0, 9, 15) |
FxSite_16_1 %notin% c(0, 9, 15) |
FxSite_16_2 %notin% c(0, 9, 15))
lowTraumaFractures <- fractureData$record_id
# Full camos data set
camos <- read.csv("camos_adjustedZscore.csv") %>% select(-sex)
camos$radius_ZScore <- as.numeric(levels(camos$radius_ZScore))[camos$radius_ZScore]
camos$tibia_ZScore <- as.numeric(levels(camos$tibia_ZScore))[camos$tibia_ZScore]
combinedDf <- inner_join(fractureData, camos, by="record_id")
filteredCombinedDf <- combinedDf %>% filter(record_id %in% lowTraumaFractures)
#filteredCombinedDf
# Filter by age
# filteredCombinedDf <- filteredCombinedDf %>% filter(age >= 60)
# nrow(filteredCombinedDf)
# Sex specific dfs
femaleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Female')
maleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Male')
# Group by
fn_radius_female <- femaleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_radius_male <- maleCombinedDf %>% select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_tibia_female <- femaleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
fn_tibia_male <- maleCombinedDf %>% select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
# Filter by age
# filteredCombinedDf <- filteredCombinedDf %>% filter(age >= 60)
setdiff(filteredCombinedDf, filteredCombinedDf %>% filter(age >= 60))
# Filter by age
# filteredCombinedDf <- filteredCombinedDf %>% filter(age >= 60)
setdiff(filteredCombinedDf, filteredCombinedDf %>% filter(age >= 60)) %>% select(record_id, sex, age)
radius_fn_male_fracture_enhanced <- radius_fn_male_plot %+% subset(fn_radius_male_enhanced) + ggtitle("Male: Radius FL vs FN T-Score (n=1)")
radius_fn_female_fracture_enhanced <- radius_fn_female_plot %+% subset(fn_radius_female_enhanced) + ggtitle("Female: Radius FL vs FN T-Score (n=12)")
ggarrange(radius_fn_female_fracture_enhanced, radius_fn_male_fracture_enhanced,
labels = c("A", "B"),
ncol = 2, nrow = 1)
# Extra fracture data for lauren
# Not in function
`%notin%` <- function (x, vector) is.na(match(x, vector, nomatch=NA_integer_))
# Remove unncessary column and replace 0s with NAs
fractureData <- read.csv("fractureData.csv")
fractureData[is.na(fractureData)] <- 0
fractureData$sex[fractureData$sex == 0] = 'Female'
fractureData$sex[fractureData$sex == 1] = 'Male'
names(fractureData)[names(fractureData) == 'ID'] <- 'record_id'
fractureDataRadius <- fractureData %>%
filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %in% c(6, 7) |
FxSite_11_1 %in% c(6, 7) |
FxSite_12_1 %in% c(6, 7) |
FxSite_13_1 %in% c(6, 7) |
FxSite_14_1 %in% c(6, 7) |
FxSite_15_1 %in% c(6, 7) |
FxSite_15_2 %in% c(6, 7) |
FxSite_16_1 %in% c(6, 7) |
FxSite_16_2 %in% c(6, 7))
fractureDataTibia <- fractureData %>%
filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %in% c(1, 2, 11, 12, 13) |
FxSite_11_1 %in% c(1, 2, 11, 12, 13) |
FxSite_12_1 %in% c(1, 2, 11, 12, 13) |
FxSite_13_1 %in% c(1, 2, 11, 12, 13) |
FxSite_14_1 %in% c(1, 2, 11, 12, 13) |
FxSite_15_1 %in% c(1, 2, 11, 12, 13) |
FxSite_15_2 %in% c(1, 2, 11, 12, 13) |
FxSite_16_1 %in% c(1, 2, 11, 12, 13) |
FxSite_16_2 %in% c(1, 2, 11, 12, 13))
# Full camos data set
camos <- read.csv("camos_adjustedZscore.csv") %>% select(-sex)
camos$radius_ZScore <- as.numeric(levels(camos$radius_ZScore))[camos$radius_ZScore]
camos$tibia_ZScore <- as.numeric(levels(camos$tibia_ZScore))[camos$tibia_ZScore]
# Radius
combinedRadius <- inner_join(fractureDataRadius, camos, by="record_id") %>%
filter(record_id %in% fractureDataRadius$record_id)
fn_radius_female_enhanced <- combinedRadius %>%
filter(sex == 'Female') %>%
select(record_id, fn_abmd, radius_ZScore, fn_t_score)
fn_radius_male_enhanced <- combinedRadius %>%
filter(sex == 'Male') %>%
select(record_id, fn_abmd, radius_ZScore, fn_t_score)
# Tibia
combinedTibia <- inner_join(fractureDataTibia, camos, by="record_id") %>%
filter(record_id %in% fractureDataTibia$record_id)
fn_tibia_female_enhanced <- combinedTibia %>%
filter(sex == 'Female') %>%
select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
fn_tibia_male_enhanced <- combinedTibia %>%
filter(sex == 'Male') %>%
select(record_id, fn_abmd, tibia_ZScore, fn_t_score)
radius_fn_male_fracture_enhanced <- radius_fn_male_plot %+% subset(fn_radius_male_enhanced) + ggtitle("Male: Radius FL vs FN T-Score (n=1)")
radius_fn_female_fracture_enhanced <- radius_fn_female_plot %+% subset(fn_radius_female_enhanced) + ggtitle("Female: Radius FL vs FN T-Score (n=12)")
ggarrange(radius_fn_female_fracture_enhanced, radius_fn_male_fracture_enhanced,
labels = c("A", "B"),
ncol = 2, nrow = 1)
tibia_fn_male_fracture_enhanced <- tibia_fn_male_plot %+% subset(fn_tibia_male_enhanced) + ggtitle("Male: Tibia FL vs FN T-Score (n=3)")
tibia_fn_female_fracture_enhanced <- tibia_fn_female_plot %+% subset(fn_tibia_female_enhanced) + ggtitle("Female: Tibia FL vs FN T-Score (n=13)")
ggarrange(tibia_fn_female_fracture_enhanced, tibia_fn_male_fracture_enhanced,
labels = c("A", "B"),
ncol = 2, nrow = 1)
knitr::opts_chunk$set(echo = FALSE)
setwd("~/Google Drive/FractureRisk")
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tibble)
library(chemCal)
library(plyr)
library(data.table)
`%+%` <- ggplot2::`%+%`
radius_fn_male_fracture_enhanced <- radius_fn_male_plot %+% subset(fn_radius_male_enhanced) + ggtitle("Male: Radius FL vs FN T-Score (n=1)")
radius_fn_female_fracture_enhanced <- radius_fn_female_plot %+% subset(fn_radius_female_enhanced) + ggtitle("Female: Radius FL vs FN T-Score (n=12)")
ggarrange(radius_fn_female_fracture_enhanced, radius_fn_male_fracture_enhanced,
labels = c("A", "B"),
ncol = 2, nrow = 1)
radius_fn_male_fracture <- radius_fn_male_plot %+% subset(fn_radius_male) + ggtitle("Male: Radius FL vs FN T-Score (n=6)")
radius_fn_female_fracture <- radius_fn_female_plot %+% subset(fn_radius_female) + ggtitle("Female: Radius FL vs FN T-Score (n=29)")
ggarrange(radius_fn_female_fracture, radius_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
knitr::opts_chunk$set(echo = FALSE)
setwd("~/Google Drive/FractureRisk")
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tibble)
library(chemCal)
library(plyr)
## Import the CaMos Dataset
# Remove unnecessary column and replace 0s with NAs
camos <- read.csv("camos_tscore.csv")
sex <- camos$sex
camos <- na_if(camos, 0)
camos$sex <- sex
camos_female <- camos[sex == 0, ]
camos_male <- camos[sex == 1, ]
library(chemCal)
# Initialize linear models
radius_fn_lm_female <- glm(fn_t_score ~ failure_load_radius, data=camos_female, family=gaussian(link = "identity"))
tibia_fn_lm_female <- glm(fn_t_score ~ failure_load_tibia , data=camos_female, family=gaussian(link = "identity"))
radius_fn_lm_male <- glm(fn_t_score ~ failure_load_radius, data=camos_male, family=gaussian(link = "identity"))
tibia_fn_lm_male <- glm(fn_t_score ~ failure_load_tibia , data=camos_male, family=gaussian(link = "identity"))
# Vector of all models
linear.models.single <- list(radius_fn_lm_male, tibia_fn_lm_male, radius_fn_lm_female, tibia_fn_lm_female)
modelNames <-  c("Radius FN Male", "Tibia FN Male", "Radius FN Female", "Tibia FN Female")
names(linear.models.single) <- modelNames
# Summary of All Models
linear.model.summaries <- lapply(linear.models.single, summary)
r.squared <- lapply(linear.models.single, function(linearModel){
return(1 - (summary(linearModel)$deviance / summary(linearModel)$null.deviance))
})
aic <- sapply(linear.model.summaries, function(linearModel){linearModel$aic})
# Place togerts R2 values and sort by descending
r.squared.df <- gather(as.data.frame(r.squared, nrow=12, ncol=1), value = "R.Squared", key = "Variable") %>%
mutate(AIC = aic) %>%
arrange(desc(R.Squared))
print(r.squared.df, row.names = FALSE)
# Function to create prediction data frame
predictionDataframe <- function(singleModel, name){
# Osteopenia
osteopeniaPrediction <- inverse.predict(singleModel, -1)
rawPrediction <- osteopeniaPrediction$Prediction
truncatedPrediction <- trunc(rawPrediction / 100) * 100
standardError <- osteopeniaPrediction$`Standard Error`
osteopeniaDf <- data.frame(Osteopenia = truncatedPrediction,
Osteopenia.Raw = rawPrediction)
# Osteopenia.Error = standardError)
# Osteoporosis
osteoporosisPrediction <- inverse.predict(singleModel, -2.5)
rawPrediction <- osteoporosisPrediction$Prediction
truncatedPrediction <- trunc(rawPrediction / 100) * 100
standardError <- osteoporosisPrediction$`Standard Error`
osteoporosisDf <- data.frame(Osteoporosis = truncatedPrediction,
Osteoporosis.Raw = rawPrediction)
# Osteoporosis.Error = standardError)
# Combine dfs
combinedDf <- bind_cols(osteopeniaDf, osteoporosisDf)
combinedDf
}
predictionDf <- t(mapply(predictionDataframe, singleModel = linear.models.single, name = modelNames))
predictionDf
#############################
# CREATE ALL GRAPHS BASE
#############################
############# FEMORAL NECK T-SCORE #############
# Radius Failure Load vs Femoral Neck T-Score (Female)
radius_fn_female_plot <- ggplot(camos_female, aes(x=fn_t_score, y=failure_load_radius)) +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
geom_point(shape = 4) +
labs(x = "T-Score",
y= "Failure Load (N)",
title = "Radius FL vs FN T-Score (Women)") +
scale_x_continuous(name="\nDXA T-Score", breaks = seq(-4, 3.5, 1.5),  limits=c(-4, 3.5)) +
scale_y_continuous(expand = c(0, 0), name="HR-pQCT Failure Load (N)", breaks = seq(0, 6000, 1000),  limits=c(0, 6000)) +
geom_vline(xintercept=c(-1, -2.5)) +
geom_hline(yintercept=c(1600, 700)) +
annotate(geom="text", x=-1.75, y=5500, label="Low Bone\nDensity", size = 2.4) +
annotate(geom="text", x=-3.45, y=5500, label="Osteoporosis", size = 2.4) +
annotate(geom="text", x=2.75, y=1150, label="Low Bone\nStrength", size = 2.8) +
annotate(geom="text", x=2.75, y=350, label="Fragile Bone\nStrength", size = 2.8)
#+
#annotate(geom="rect", xmin = -2.5, xmax = -1, ymin = 0, ymax = 700, alpha = .2)
# Radius Failure Load vs Femoral Neck T-Score (Male)
radius_fn_male_plot <- ggplot(camos_male, aes(x=fn_t_score, y=failure_load_radius)) +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
geom_point(shape = 4) +
labs(x = "T-Score",
y= "Failure Load (N)",
title = "Radius FL vs FN T-Score (Men)") +
scale_x_continuous(name="\nDXA T-Score", breaks = seq(-4, 3.5, 1.5),  limits=c(-4, 3.5)) +
scale_y_continuous(expand = c(0, 0), name="HR-pQCT Failure Load (N)", breaks = seq(0, 6000, 1000),  limits=c(0, 6000)) +
geom_vline(xintercept=c(-1, -2.5)) +
geom_hline(yintercept=c(2000, 800)) +
annotate(geom="text", x=-1.75, y=5500, label="Low Bone\nDensity", size = 2.4) +
annotate(geom="text", x=-3.45, y=5500, label="Osteoporosis", size = 2.4) +
annotate(geom="text", x=2.75, y=1400, label="Low Bone\nStrength", size = 2.8) +
annotate(geom="text", x=2.75, y=400, label="Fragile Bone\nStrength", size = 2.8) #+
#annotate(geom="rect", xmin = -2.5, xmax = -1, ymin = 0, ymax = 800, alpha = .2)
############# FEMORAL NECK T-SCORE #############
# Tibia Failure Load vs Femoral Neck T-Score (Female)
tibia_fn_female_plot <- ggplot(camos_female, aes(x=fn_t_score, y=failure_load_tibia)) +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
geom_point(shape = 4) +
labs(x = "T-Score",
y= "Failure Load (N)",
title = "Tibia FL vs FN T-Score (Women)") +
scale_x_continuous(name="\nDXA T-Score", breaks = seq(-4, 3.5, 1.5),  limits=c(-4, 3.5)) +
scale_y_continuous(expand = c(0, 0), name="HR-pQCT Failure Load (N)", breaks = seq(0, 14000, 2000),  limits=c(0, 14000)) +
geom_vline(xintercept=c(-1, -2.5)) +
geom_hline(yintercept=c(4800, 2800)) +
annotate(geom="text", x=-1.75, y=13000, label="Low Bone\nDensity", size = 2.4) +
annotate(geom="text", x=-3.45, y=13000, label="Osteoporosis", size = 2.4) +
annotate(geom="text", x=2.75, y=3800, label="Low Bone\nStrength", size = 2.8) +
annotate(geom="text", x=2.75, y=1400, label="Fragile Bone\nStrength", size = 2.8) #+
#annotate(geom="rect", xmin = -2.5, xmax = -1, ymin = 0, ymax = 2800, alpha = .2)
# Tibia Failure Load vs Femoral Neck T-Score (Male)
tibia_fn_male_plot <- ggplot(camos_male, aes(x=fn_t_score, y=failure_load_tibia)) +
theme_bw() +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
geom_point(shape = 4) +
labs(x = "T-Score",
y= "Failure Load (N)",
title = "Tibia FL vs FN T-Score (Men)") +
scale_x_continuous(name="\nDXA T-Score", breaks = seq(-4, 3.5, 1.5),  limits=c(-4, 3.5)) +
scale_y_continuous(expand = c(0, 0), name="HR-pQCT Failure Load (N)", breaks = seq(0, 14000, 2000),  limits=c(0, 14000)) +
geom_vline(xintercept=c(-1, -2.5)) +
geom_hline(yintercept=c(5700, 3400)) +
annotate(geom="text", x=-1.75, y=13000, label="Low Bone\nDensity", size = 2.4) +
annotate(geom="text", x=-3.45, y=13000, label="Osteoporosis", size = 2.4) +
annotate(geom="text", x=2.75, y=4550, label="Low Bone\nStrength", size = 2.8) +
annotate(geom="text", x=2.75, y=1700, label="Fragile Bone\nStrength", size = 2.8) #+
#annotate(geom="rect", xmin = -2.5, xmax = -1, ymin = 0, ymax = 3400, alpha = .2)
ggarrange(radius_fn_female_plot, radius_fn_male_plot,
labels = c("A", "B"),
ncol = 2, nrow = 1)
ggarrange(tibia_fn_female_plot, tibia_fn_male_plot,
labels = c("A", "B"),
ncol = 2, nrow = 1)
radius_fn_male_lm <- radius_fn_male_plot + stat_smooth(method = "lm", level = .95)
radius_fn_female_lm <- radius_fn_female_plot + stat_smooth(method = "lm", level = .95)
ggarrange(radius_fn_female_lm, radius_fn_male_lm,
labels = c("A", "B"),
ncol = 2, nrow = 1)
tibia_fn_male_lm <- tibia_fn_male_plot + stat_smooth(method = "lm", level = .95)
tibia_fn_female_lm <- tibia_fn_female_plot + stat_smooth(method = "lm", level = .95)
ggarrange(tibia_fn_female_lm, tibia_fn_male_lm,
labels = c("A", "B"),
ncol = 2, nrow = 1)
## Import fracture dataset
# Not in function
`%notin%` <- function (x, vector) is.na(match(x, vector, nomatch=NA_integer_))
# Remove unncessary column and replace 0s with NAs
fractureData <- read.csv("fractureData.csv")
fractureData[is.na(fractureData)] <- 0
fractureData$sex[fractureData$sex == 0] = 'Female'
fractureData$sex[fractureData$sex == 1] = 'Male'
names(fractureData)[names(fractureData) == 'ID'] <- 'record_id'
fractureData <- fractureData %>%
filter(FxMech_10_1 %notin% c(0, 4, 5, 8) |
FxMech_11_1 %notin% c(0, 4, 5, 8) |
FxMech_12_1 %notin% c(0, 4, 5, 8) |
FxMech_13_1 %notin% c(0, 4, 5, 8) |
FxMech_14_1 %notin% c(0, 4, 5, 8) |
FxMech_15_1 %notin% c(0, 4, 5, 8) |
FxMech_15_2 %notin% c(0, 4, 5, 8) |
FxMech_16_1 %notin% c(0, 4, 5, 8) |
FxMech_16_2 %notin% c(0, 4, 5, 8)) %>%
filter(FxSite_10_1 %notin% c(0, 9, 15) |
FxSite_11_1 %notin% c(0, 9, 15) |
FxSite_12_1 %notin% c(0, 9, 15) |
FxSite_13_1 %notin% c(0, 9, 15) |
FxSite_14_1 %notin% c(0, 9, 15) |
FxSite_15_1 %notin% c(0, 9, 15) |
FxSite_15_2 %notin% c(0, 9, 15) |
FxSite_16_1 %notin% c(0, 9, 15) |
FxSite_16_2 %notin% c(0, 9, 15))
lowTraumaFractures <- fractureData$record_id
# Full camos data set
camos <- read.csv("camos_tscore.csv") %>% select(-sex)
combinedDf <- inner_join(fractureData, camos, by="record_id")
filteredCombinedDf <- combinedDf %>% filter(record_id %in% lowTraumaFractures)
#filteredCombinedDf
femaleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Female')
maleCombinedDf <- filteredCombinedDf %>% filter(sex == 'Male')
# Group by
fn_radius_female <- femaleCombinedDf %>% select(record_id, fn_abmd, failure_load_radius, fn_t_score)
fn_radius_male <- maleCombinedDf %>% select(record_id, fn_abmd, failure_load_radius, fn_t_score)
fn_tibia_female <- femaleCombinedDf %>% select(record_id, fn_abmd, failure_load_tibia, fn_t_score)
fn_tibia_male <- maleCombinedDf %>% select(record_id, fn_abmd, failure_load_tibia, fn_t_score)
radius_fn_male_fracture <- radius_fn_male_plot %+% subset(fn_radius_male) + ggtitle("Men: Radius FL vs FN T-Score (n=6)")
radius_fn_female_fracture <- radius_fn_female_plot %+% subset(fn_radius_female) + ggtitle("Women: Radius FL vs FN T-Score (n=29)")
ggarrange(radius_fn_female_fracture, radius_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
tibia_fn_male_fracture <- tibia_fn_male_plot %+% subset(fn_tibia_male) + ggtitle("Men: Tibia FL vs FN T-Score (n=6)")
tibia_fn_female_fracture <- tibia_fn_female_plot %+% subset(fn_tibia_female) + ggtitle("Women: Tibia FL vs FN T-Score (n=29)")
ggarrange(tibia_fn_female_fracture, tibia_fn_male_fracture,
labels = c("A", "B"),
ncol = 2, nrow = 1)
